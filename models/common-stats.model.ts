/**
 * This file is generated by the SwaggerTSGenerator.
 * Do not edit.
*/
/* tslint:disable */
import { Validators, FormControl, FormGroup, FormArray, ValidatorFn } from '@angular/forms';
import { minValueValidator, maxValueValidator, enumValidator } from './validators';
import { BaseModel } from './base-model';
import { SubTypeFactory } from './sub-type-factory';


export interface ICommonStats {
    data_feeds?: number;
    nodes_count?: number;
    pulses?: number;
}


export class CommonStats extends BaseModel implements ICommonStats  {

    static DATA_FEEDS_FIELD_NAME = 'data_feeds';
    static NODES_COUNT_FIELD_NAME = 'nodes_count';
    static PULSES_FIELD_NAME = 'pulses';

    data_feeds: number;
    nodes_count: number;
    pulses: number;

    /**
     * constructor
     * @param values Can be used to set a webapi response or formValues to this newly constructed model
    * @useFormGroupValuesToModel if true use formValues
    */
    constructor(values?: Partial<ICommonStats>, useFormGroupValuesToModel = false) {
        super();

        if (values) {
            this.setValues(values, useFormGroupValuesToModel);
        }
    }

    /**
     * set the values.
     * @param values Can be used to set a webapi response to this newly constructed model
    */
    setValues(values: Partial<ICommonStats>, useFormGroupValuesToModel = false): void {
        if (values) {
            const rawValues = this.getValuesToUse(values, useFormGroupValuesToModel);
            this.data_feeds = this.getValue<number>(rawValues, CommonStats.DATA_FEEDS_FIELD_NAME);
            this.nodes_count = this.getValue<number>(rawValues, CommonStats.NODES_COUNT_FIELD_NAME);
            this.pulses = this.getValue<number>(rawValues, CommonStats.PULSES_FIELD_NAME);
            // set values in model properties for added formControls
            super.setValuesInAddedPropertiesOfAttachedFormControls(values, useFormGroupValuesToModel);
        }
    }

    protected getFormGroup(): FormGroup {
        if (!this._formGroup) {
            this._formGroup = new FormGroup({
                data_feeds: new FormControl(this.data_feeds),
                nodes_count: new FormControl(this.nodes_count),
                pulses: new FormControl(this.pulses),
            });
        }
        return this._formGroup;
    }

    /**
     * set the FormGroup values to the model values.
    */
    setFormGroupValues() {
        this.$formGroup.controls[CommonStats.DATA_FEEDS_FIELD_NAME].setValue(this.data_feeds);
        this.$formGroup.controls[CommonStats.NODES_COUNT_FIELD_NAME].setValue(this.nodes_count);
        this.$formGroup.controls[CommonStats.PULSES_FIELD_NAME].setValue(this.pulses);
        // set formValues in added formControls
        super.setFormGroupValuesInAddedFormControls();
    }
}
