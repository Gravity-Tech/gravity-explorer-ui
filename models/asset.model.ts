/**
 * This file is generated by the SwaggerTSGenerator.
 * Do not edit.
 */
/* tslint:disable */
import {
  Validators,
  FormControl,
  FormGroup,
  FormArray,
  ValidatorFn,
} from '@angular/forms'
import {
  minValueValidator,
  maxValueValidator,
  enumValidator,
} from './validators'
import { BaseModel } from './base-model'
import { SubTypeFactory } from './sub-type-factory'

export interface IAsset {
  amount?: string
  decimals?: number
  name?: string
}

export class Asset extends BaseModel implements IAsset {
  static AMOUNT_FIELD_NAME = 'amount'
  static DECIMALS_FIELD_NAME = 'decimals'
  static NAME_FIELD_NAME = 'name'

  amount: string
  decimals: number
  name: string

  /**
   * constructor
   * @param values Can be used to set a webapi response or formValues to this newly constructed model
   * @useFormGroupValuesToModel if true use formValues
   */
  constructor(values?: Partial<IAsset>, useFormGroupValuesToModel = false) {
    super()

    if (values) {
      this.setValues(values, useFormGroupValuesToModel)
    }
  }

  /**
   * set the values.
   * @param values Can be used to set a webapi response to this newly constructed model
   */
  setValues(values: Partial<IAsset>, useFormGroupValuesToModel = false): void {
    if (values) {
      const rawValues = this.getValuesToUse(values, useFormGroupValuesToModel)
      this.amount = this.getValue<string>(rawValues, Asset.AMOUNT_FIELD_NAME)
      this.decimals = this.getValue<number>(
        rawValues,
        Asset.DECIMALS_FIELD_NAME
      )
      this.name = this.getValue<string>(rawValues, Asset.NAME_FIELD_NAME)
      // set values in model properties for added formControls
      super.setValuesInAddedPropertiesOfAttachedFormControls(
        values,
        useFormGroupValuesToModel
      )
    }
  }

  protected getFormGroup(): FormGroup {
    if (!this._formGroup) {
      this._formGroup = new FormGroup({
        amount: new FormControl(this.amount),
        decimals: new FormControl(this.decimals),
        name: new FormControl(this.name),
      })
    }
    return this._formGroup
  }

  /**
   * set the FormGroup values to the model values.
   */
  setFormGroupValues() {
    this.$formGroup.controls[Asset.AMOUNT_FIELD_NAME].setValue(this.amount)
    this.$formGroup.controls[Asset.DECIMALS_FIELD_NAME].setValue(this.decimals)
    this.$formGroup.controls[Asset.NAME_FIELD_NAME].setValue(this.name)
    // set formValues in added formControls
    super.setFormGroupValuesInAddedFormControls()
  }
}
